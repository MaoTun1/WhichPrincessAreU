package whichPrincessAreU;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;

public class PrincessMatcherGUI {

    private JLabel userPhotoLabel;
    private JLabel resultPhotoLabel;
    private PrincessMatcher matcher;

    public PrincessMatcherGUI() {
        matcher = new PrincessMatcher();

        // Ana pencere
        JFrame frame = new JFrame("Which Princess Are You?");
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.setSize(800, 600);
        frame.setLayout(null);

        // Kullanıcı fotoğrafı bölgesi
        userPhotoLabel = new JLabel();
        userPhotoLabel.setBounds(50, 150, 200, 200);
        userPhotoLabel.setBorder(BorderFactory.createLineBorder(Color.BLACK));
        frame.add(userPhotoLabel);

        // "Fotoğraf Yükle" butonu
        JButton uploadButton = new JButton("Upload Photo");
        uploadButton.setBounds(90, 370, 120, 30);
        frame.add(uploadButton);

        // Prenses görselleri başlığı
        JLabel titleLabel = new JLabel("Which Princess Are You?", SwingConstants.CENTER);
        titleLabel.setFont(new Font("Arial", Font.BOLD, 24));
        titleLabel.setBounds(200, 20, 400, 30);
        frame.add(titleLabel);

        // Sonuç görseli bölgesi
        resultPhotoLabel = new JLabel();
        resultPhotoLabel.setBounds(550, 150, 200, 200);
        resultPhotoLabel.setBorder(BorderFactory.createLineBorder(Color.BLACK));
        frame.add(resultPhotoLabel);

        // "Run" butonu
        JButton runButton = new JButton("Run");
        runButton.setBounds(350, 400, 100, 30);
        frame.add(runButton);

        // Fotoğraf yükleme butonu işlevi
        uploadButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                JFileChooser fileChooser = new JFileChooser();
                int result = fileChooser.showOpenDialog(frame);
                if (result == JFileChooser.APPROVE_OPTION) {
                    File selectedFile = fileChooser.getSelectedFile();
                    // Kullanıcı fotoğrafını user klasörüne kopyala
                    String destinationPath = "src/user/user.png";
                    selectedFile.renameTo(new File(destinationPath));
                    // Fotoğrafı GUI'de göster
                    ImageIcon userImage = new ImageIcon(destinationPath);
                    Image scaledImage = userImage.getImage().getScaledInstance(200, 200, Image.SCALE_SMOOTH);
                    userPhotoLabel.setIcon(new ImageIcon(scaledImage));
                }
            }
        });

        // Run butonu işlevi
        runButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                String bestMatchPrincess = matcher.PrincessMatcher();
                if (bestMatchPrincess != null) {
                    // Sonuç görselini GUI'de göster
                    ImageIcon resultImage = new ImageIcon("src/images/" + bestMatchPrincess);
                    Image scaledResultImage = resultImage.getImage().getScaledInstance(200, 200, Image.SCALE_SMOOTH);
                    resultPhotoLabel.setIcon(new ImageIcon(scaledResultImage));
                } else {
                    JOptionPane.showMessageDialog(frame, "No match found or error in processing!");
                }
            }
        });

        frame.setVisible(true);
    }
